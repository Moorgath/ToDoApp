{"ast":null,"code":"var _jsxFileName = \"/Users/wojtek/Downloads/todo/client/src/components/TaskList.js\";\nimport React, { Fragment } from 'react';\nimport Cookies from 'universal-cookie';\nimport './TaskList.sass';\nconst cookies = new Cookies();\n\nconst taskDone = props => {\n  console.log(props);\n};\n\nconst choosePrior = prior => {\n  if (prior === 1) return 'priorityCircleGrey';else if (prior === 2) return 'priorityCircleBlue';else return 'priorityCircleRed';\n};\n\nconst createDate = date => {\n  const day = new Date(date).getDate();\n  const month = new Date(date).getMonth();\n  const year = new Date(date).getFullYear();\n  return day + '/' + (month + 1) + '/' + year;\n};\n\nconst createTaskList = () => {\n  let tasks = cookies.get('tasks') || [];\n  if (tasks.length === 0) return 'No tasks!';else {\n    tasks = tasks.map(task => /*#__PURE__*/React.createElement(Fragment, {\n      key: task.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: taskDone.bind(this, task.title),\n      className: choosePrior(task.priority),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"taskName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, task.title, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"taskDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 68\n      }\n    }, createDate(task.date)))));\n    return tasks;\n  }\n};\n\nconst TaskList = () => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskListPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskListHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"These are your current tasks: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, createTaskList())));\n};\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/TaskList.js"],"names":["React","Fragment","Cookies","cookies","taskDone","props","console","log","choosePrior","prior","createDate","date","day","Date","getDate","month","getMonth","year","getFullYear","createTaskList","tasks","get","length","map","task","title","bind","priority","TaskList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,iBAAP;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AAEA,MAAME,QAAQ,GAAGC,KAAK,IAAI;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,CAFD;;AAIA,MAAMG,WAAW,GAAGC,KAAK,IAAI;AACzB,MAAIA,KAAK,KAAK,CAAd,EAAiB,OAAO,oBAAP,CAAjB,KACK,IAAIA,KAAK,KAAK,CAAd,EAAiB,OAAO,oBAAP,CAAjB,KACA,OAAO,mBAAP;AACR,CAJD;;AAMA,MAAMC,UAAU,GAAGC,IAAI,IAAI;AACvB,QAAMC,GAAG,GAAG,IAAIC,IAAJ,CAASF,IAAT,EAAeG,OAAf,EAAZ;AACA,QAAMC,KAAK,GAAG,IAAIF,IAAJ,CAASF,IAAT,EAAeK,QAAf,EAAd;AACA,QAAMC,IAAI,GAAG,IAAIJ,IAAJ,CAASF,IAAT,EAAeO,WAAf,EAAb;AACA,SAAON,GAAG,GAAG,GAAN,IAAaG,KAAK,GAAC,CAAnB,IAAwB,GAAxB,GAA8BE,IAArC;AACH,CALD;;AAOA,MAAME,cAAc,GAAG,MAAM;AACzB,MAAIC,KAAK,GAAGjB,OAAO,CAACkB,GAAR,CAAY,OAAZ,KAAwB,EAApC;AACA,MAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB,OAAO,WAAP,CAAxB,KAEA;AACIF,IAAAA,KAAK,GAAGA,KAAK,CAACG,GAAN,CAAUC,IAAI,iBAClB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,OAAO,EAAErB,QAAQ,CAACsB,IAAT,CAAc,IAAd,EAAoBF,IAAI,CAACC,KAAzB,CAAf;AAAgD,MAAA,SAAS,EAAEjB,WAAW,CAACgB,IAAI,CAACG,QAAN,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BH,IAAI,CAACC,KAAjC,MAFJ,eAEmD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4Bf,UAAU,CAACc,IAAI,CAACb,IAAN,CAAtC,CAFnD,CADJ,CADI,CAAR;AAQA,WAAOS,KAAP;AACH;AACJ,CAfD;;AAiBA,MAAMQ,QAAQ,GAAG,MAAM;AACnB,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMT,cAAc,EAApB,CAFJ,CADJ,CADJ;AAQH,CATD;;AAWA,eAAeS,QAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport Cookies from 'universal-cookie'\nimport './TaskList.sass'\n\nconst cookies = new Cookies()\n\nconst taskDone = props => {\n    console.log(props)\n}\n\nconst choosePrior = prior => {\n    if (prior === 1) return 'priorityCircleGrey'\n    else if (prior === 2) return 'priorityCircleBlue'\n    else return 'priorityCircleRed'\n}\n\nconst createDate = date => {\n    const day = new Date(date).getDate()\n    const month = new Date(date).getMonth()\n    const year = new Date(date).getFullYear()\n    return day + '/' + (month+1) + '/' + year\n}\n\nconst createTaskList = () => {\n    let tasks = cookies.get('tasks') || []\n    if (tasks.length === 0) return 'No tasks!'\n    else \n    {\n        tasks = tasks.map(task => \n            <Fragment key={task.title}>\n                <div className='taskList'>\n                    <span onClick={taskDone.bind(this, task.title)} className={choosePrior(task.priority)}></span>\n                    <span className='taskName'>{task.title} </span><span className='taskDate'>{createDate(task.date)}</span>\n                </div>\n            </Fragment>\n        )\n        return tasks\n    }\n}\n\nconst TaskList = () => {\n    return (\n        <Fragment>\n            <div className='taskListPanel'>\n                <span className='taskListHeader'>These are your current tasks: </span>\n                <div>{createTaskList()}</div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}