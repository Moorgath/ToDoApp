{"ast":null,"code":"var _jsxFileName = \"/Users/wojtek/Downloads/todo/client/src/components/TaskList.js\";\nimport React, { Fragment } from 'react';\nimport Cookies from 'universal-cookie';\nimport './TaskList.sass';\nconst cookies = new Cookies();\n\nconst choosePrior = prior => {\n  if (prior === 1) return '<span className=\".priorityCircleGrey></span>\"';else if (prior === 2) return '<span className=\".priorityCircleBlue></span>\"';else return '<span className=\".priorityCircleRed></span>\"';\n};\n\nconst createTaskList = () => {\n  let tasks = cookies.get('tasks') || [];\n  if (tasks.length === 0) return 'No tasks!';else {\n    tasks = tasks.map(task => {\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, this.choosePrior(task.priority), task.title, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }), \"Deadline: \", task.date);\n    });\n    return tasks;\n  }\n};\n\nconst TaskList = () => {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskListPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskListHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"These are your current tasks: \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, createTaskList())));\n};\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/TaskList.js"],"names":["React","Fragment","Cookies","cookies","choosePrior","prior","createTaskList","tasks","get","length","map","task","priority","title","date","TaskList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAO,iBAAP;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AAEA,MAAME,WAAW,GAAGC,KAAK,IAAI;AACzB,MAAIA,KAAK,KAAK,CAAd,EAAiB,OAAO,+CAAP,CAAjB,KACK,IAAIA,KAAK,KAAK,CAAd,EAAiB,OAAM,+CAAN,CAAjB,KACA,OAAO,8CAAP;AACR,CAJD;;AAMA,MAAMC,cAAc,GAAG,MAAM;AACzB,MAAIC,KAAK,GAAGJ,OAAO,CAACK,GAAR,CAAY,OAAZ,KAAwB,EAApC;AACA,MAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB,OAAO,WAAP,CAAxB,KAEA;AACIF,IAAAA,KAAK,GAAGA,KAAK,CAACG,GAAN,CAAWC,IAAI,IAAI;AACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKP,WAAL,CAAiBO,IAAI,CAACC,QAAtB,CADL,EACsCD,IAAI,CAACE,KAD3C,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,gBAEoBF,IAAI,CAACG,IAFzB;AAIH,KALO,CAAR;AAMA,WAAOP,KAAP;AACH;AACJ,CAbD;;AAeA,MAAMQ,QAAQ,GAAG,MAAM;AACnB,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMT,cAAc,EAApB,CAFJ,CADJ,CADJ;AAQH,CATD;;AAWA,eAAeS,QAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport Cookies from 'universal-cookie'\nimport './TaskList.sass'\n\nconst cookies = new Cookies()\n\nconst choosePrior = prior => {\n    if (prior === 1) return '<span className=\".priorityCircleGrey></span>\"';\n    else if (prior === 2) return'<span className=\".priorityCircleBlue></span>\"';\n    else return '<span className=\".priorityCircleRed></span>\"';\n}\n\nconst createTaskList = () => {\n    let tasks = cookies.get('tasks') || []\n    if (tasks.length === 0) return 'No tasks!'\n    else \n    {\n        tasks = tasks.map( task => {\n            <div>\n                {this.choosePrior(task.priority)}{task.title} \n                <br/>Deadline: {task.date}\n            </div>\n        })\n        return tasks\n    }\n}\n\nconst TaskList = () => {\n    return (\n        <Fragment>\n            <div className='taskListPanel'>\n                <span className='taskListHeader'>These are your current tasks: </span>\n                <div>{createTaskList()}</div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}