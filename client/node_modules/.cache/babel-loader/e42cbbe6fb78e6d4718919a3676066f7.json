{"ast":null,"code":"var _jsxFileName = \"/Users/wojtek/Downloads/todo/client/src/components/TaskList.js\";\nimport React, { Component, Fragment } from 'react';\nimport Cookies from 'universal-cookie';\nimport './TaskList.sass';\nimport notasks from './img/logo.png';\nconst cookies = new Cookies();\n\nclass TaskList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      task: ''\n    };\n\n    this.updateDatabase = props => {\n      const tasks = props;\n      const response = fetch('/updatetask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tasks: tasks,\n          user: cookies.get('user')\n        })\n      });\n    };\n\n    this.taskDone = () => {\n      let tasks = cookies.get('tasks');\n      tasks.map(task => {\n        if (task.title === this.state.task) {\n          task.done = true;\n          cookies.set('tasks', tasks);\n          this.updateDatabase(tasks);\n        }\n      });\n      window.location.reload();\n    };\n\n    this.taskDelete = () => {\n      let tasks = cookies.get('tasks');\n      tasks = tasks.filter(task => task.title !== this.state.task);\n      cookies.set('tasks', tasks);\n      this.updateDatabase(tasks);\n      window.location.reload();\n    };\n\n    this.choosePrior = prior => {\n      if (prior === 1) return 'priorityCircleGrey';else if (prior === 2) return 'priorityCircleBlue';else return 'priorityCircleRed';\n    };\n\n    this.createDate = date => {\n      const day = new Date(date).getDate();\n      let month = new Date(date).getMonth();\n\n      switch (month) {\n        case 0:\n          month = 'Jan';\n          break;\n\n        case 1:\n          month = 'Feb';\n          break;\n\n        case 2:\n          month = 'Mar';\n          break;\n\n        case 3:\n          month = 'Apr';\n          break;\n\n        case 4:\n          month = 'May';\n          break;\n\n        case 5:\n          month = 'Jun';\n          break;\n\n        case 6:\n          month = 'Jul';\n          break;\n\n        case 7:\n          month = 'Aug';\n          break;\n\n        case 8:\n          month = 'Sep';\n          break;\n\n        case 9:\n          month = 'Oct';\n          break;\n\n        case 10:\n          month = 'Nov';\n          break;\n\n        case 11:\n          month = 'Dec';\n          break;\n      }\n\n      return day + ' ' + month;\n    };\n\n    this.handleTask = props => {\n      document.querySelector('.taskMenu').style.display = 'block';\n      this.setState({\n        task: props\n      });\n    };\n\n    this.taskClose = () => {\n      document.querySelector('.taskMenu').style.display = 'none';\n    };\n\n    this.createTaskList = () => {\n      let tasks = cookies.get('tasks') || [];\n      if (tasks.length === 0) return /*#__PURE__*/React.createElement(\"img\", {\n        src: notasks,\n        alt: \"no-tasks\",\n        className: \"noTasks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 40\n        }\n      });else {\n        let tasksToDo = tasks.filter(task => !task.done);\n        tasksToDo = tasksToDo.sort(function (a, b) {\n          let t1 = new Date(a.date).getTime();\n          let t2 = new Date(b.date).getTime();\n          return t1 - t2;\n        });\n        let tasksDone = tasks.filter(task => task.done);\n        tasksDone = tasksDone.sort(function (a, b) {\n          let t1 = new Date(a.date).getTime();\n          let t2 = new Date(b.date).getTime();\n          return t1 - t2;\n        });\n        tasksToDo = tasksToDo.map(task => /*#__PURE__*/React.createElement(Fragment, {\n          key: task.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"taskListToDo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: this.choosePrior(task.priority),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          onClick: this.handleTask.bind(this, task.title),\n          className: \"taskName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }\n        }, task.title, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"taskDate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 121\n          }\n        }, this.createDate(task.date)))));\n        tasksDone = tasksDone.map(task => /*#__PURE__*/React.createElement(Fragment, {\n          key: task.title,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"taskListDone\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: this.choosePrior(task.priority),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          onClick: this.handleTask.bind(this, task.title),\n          className: \"taskName\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }\n        }, task.title, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"taskDate\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 121\n          }\n        }, this.createDate(task.date)))));\n        tasks = [tasksToDo, tasksDone];\n        return tasks;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskListPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"taskListHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, \"These are your current tasks: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasksListMobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, this.createTaskList())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskMenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskOpt\",\n      onClick: this.taskDone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, \"Done\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskOpt\",\n      onClick: this.taskDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"taskOpt\",\n      onClick: this.taskClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Cancel \")));\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/TaskList.js"],"names":["React","Component","Fragment","Cookies","notasks","cookies","TaskList","state","task","updateDatabase","props","tasks","response","fetch","method","headers","body","JSON","stringify","user","get","taskDone","map","title","done","set","window","location","reload","taskDelete","filter","choosePrior","prior","createDate","date","day","Date","getDate","month","getMonth","handleTask","document","querySelector","style","display","setState","taskClose","createTaskList","length","tasksToDo","sort","a","b","t1","getTime","t2","tasksDone","priority","bind","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport Cookies from 'universal-cookie'\nimport './TaskList.sass'\nimport notasks from './img/logo.png'\n\nconst cookies = new Cookies()\n\nclass TaskList extends Component {\n    state = {\n        task: ''\n    }\n\n    updateDatabase = props => {\n        const tasks = props\n        const response = fetch('/updatetask', {\n          method: 'POST',\n          headers: {\n          'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({tasks: tasks, user: cookies.get('user')}),\n        })\n      }\n\n    taskDone = () => {\n        let tasks = cookies.get('tasks')\n        tasks.map(task => {\n            if (task.title === this.state.task) {\n                task.done = true\n                cookies.set('tasks', tasks)\n                this.updateDatabase(tasks)\n            }\n        })\n        window.location.reload()\n    }\n    \n    taskDelete = () => {\n        let tasks = cookies.get('tasks')\n        tasks = tasks.filter(task => \n          task.title !== this.state.task\n        )\n        cookies.set('tasks', tasks)\n        this.updateDatabase(tasks)\n        window.location.reload()\n    }\n    \n    choosePrior = prior => {\n        if (prior === 1) return 'priorityCircleGrey'\n        else if (prior === 2) return 'priorityCircleBlue'\n        else return 'priorityCircleRed'\n    }\n    \n    createDate = date => {\n        const day = new Date(date).getDate()\n        let month = new Date(date).getMonth()\n\n        switch (month) {\n            case 0:\n                month = 'Jan'\n                break;\n            case 1:\n                month = 'Feb'\n                break;\n            case 2:\n                month = 'Mar'\n                break;\n            case 3:\n                month = 'Apr'\n                break;\n            case 4:\n                month = 'May'\n                break;\n            case 5:\n                month = 'Jun'\n                break;\n            case 6:\n                month = 'Jul'\n                break;\n            case 7:\n                month = 'Aug'\n                break;\n            case 8:\n                month = 'Sep'\n                break;\n            case 9:\n                month = 'Oct'\n                break;\n            case 10:\n                month = 'Nov'\n                break;\n            case 11:\n                month = 'Dec'\n                break;\n        }\n\n        return day + ' ' + month\n    }\n    \n    handleTask = props => {\n        document.querySelector('.taskMenu').style.display = 'block'\n        this.setState({\n            task: props\n        })\n    }\n    \n    taskClose = () => {\n        document.querySelector('.taskMenu').style.display = 'none'\n    }\n\n    createTaskList = () => {\n        let tasks = cookies.get('tasks') || []\n        if (tasks.length === 0) return <img src={notasks} alt='no-tasks' className='noTasks' />\n    \n        else \n        {\n            let tasksToDo = tasks.filter(task => !task.done)\n            tasksToDo = tasksToDo.sort(function(a,b) {\n                let t1 = new Date(a.date).getTime()\n                let t2 = new Date(b.date).getTime()\n                return t1-t2\n            })\n\n            let tasksDone = tasks.filter(task => task.done)\n            tasksDone = tasksDone.sort(function(a,b) {\n                let t1 = new Date(a.date).getTime()\n                let t2 = new Date(b.date).getTime()\n                return t1-t2\n            })\n    \n            tasksToDo = tasksToDo.map(task => \n                <Fragment key={task.title}>\n                    <div className='taskListToDo'>\n                        <span className={this.choosePrior(task.priority)}></span>\n                        <span onClick={this.handleTask.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{this.createDate(task.date)}</span>\n                    </div>\n                </Fragment>\n            )\n\n            tasksDone = tasksDone.map(task => \n                <Fragment key={task.title}>\n                    <div className='taskListDone'>\n                        <span className={this.choosePrior(task.priority)}></span>\n                        <span onClick={this.handleTask.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{this.createDate(task.date)}</span>\n                    </div>\n                </Fragment>\n            )\n\n            tasks = [tasksToDo, tasksDone]\n\n            return tasks\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className='taskListPanel'>\n                    <span className='taskListHeader'>These are your current tasks: </span>\n                    <div className='tasksListMobile'>{this.createTaskList()}</div>\n                </div>\n                <div className='taskMenu'>\n                    <div className='taskOpt' onClick={this.taskDone}>Done</div>\n                    <div className='taskOpt' onClick={this.taskDelete}>Delete</div>\n                    <div className='taskOpt' onClick={this.taskClose}>Cancel </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}