{"ast":null,"code":"var _this=this;import React,{Fragment}from'react';import Cookies from'universal-cookie';import'./TaskList.sass';import done from'./img/done.png';import notasks from'./img/logo.png';var cookies=new Cookies();var taskDone=function taskDone(props){var tasks=cookies.get('tasks');tasks.map(function(task){if(task.title===props){task.done=true;cookies.set('tasks',tasks);}});window.location.reload();};var taskDelete=function taskDelete(props){var tasks=cookies.get('tasks');tasks=tasks.filter(function(task){return task.title!==props;});cookies.set('tasks',tasks);window.location.reload();};var choosePrior=function choosePrior(prior){if(prior===1)return'priorityCircleGrey';else if(prior===2)return'priorityCircleBlue';else return'priorityCircleRed';};var createDate=function createDate(date){var day=new Date(date).getDate();var month=new Date(date).getMonth();var year=new Date(date).getFullYear();return day+'/'+(month+1)+'/'+year;};var createTaskList=function createTaskList(){var tasks=cookies.get('tasks')||[];if(tasks.length===0)return/*#__PURE__*/React.createElement(\"img\",{src:notasks,alt:\"no-tasks\",className:\"noTasks\"});else{tasks=tasks.sort(function(a,b){var t1=new Date(a.date).getTime();var t2=new Date(b.date).getTime();return t1-t2;});tasks=tasks.map(function(task){return/*#__PURE__*/React.createElement(Fragment,{key:task.title},/*#__PURE__*/React.createElement(\"div\",{className:task.done?'taskListDone':'taskListToDo'},/*#__PURE__*/React.createElement(\"span\",{onClick:task.done?'':taskDone.bind(_this,task.title),className:choosePrior(task.priority)}),/*#__PURE__*/React.createElement(\"span\",{onClick:taskDelete.bind(_this,task.title),className:\"taskName\"},task.title,\" \"),/*#__PURE__*/React.createElement(\"span\",{className:\"taskDate\"},createDate(task.date))));});return tasks;}};var TaskList=function TaskList(){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"taskListPanel\"},/*#__PURE__*/React.createElement(\"span\",{className:\"taskListHeader\"},\"These are your current tasks: \"),/*#__PURE__*/React.createElement(\"div\",{className:\"tasksListMobile\"},createTaskList())));};export default TaskList;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/TaskList.js"],"names":["React","Fragment","Cookies","done","notasks","cookies","taskDone","props","tasks","get","map","task","title","set","window","location","reload","taskDelete","filter","choosePrior","prior","createDate","date","day","Date","getDate","month","getMonth","year","getFullYear","createTaskList","length","sort","a","b","t1","getTime","t2","bind","priority","TaskList"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react'\nimport Cookies from 'universal-cookie'\nimport './TaskList.sass'\nimport done from './img/done.png'\nimport notasks from './img/logo.png'\n\nconst cookies = new Cookies()\n\nconst taskDone = props => {\n    let tasks = cookies.get('tasks')\n    tasks.map(task => {\n        if (task.title === props) {\n            task.done = true\n            cookies.set('tasks', tasks)\n        }\n    })\n    window.location.reload()\n}\n\nconst taskDelete = props => {\n    let tasks = cookies.get('tasks')\n    tasks = tasks.filter(task => \n      task.title !== props\n    )\n    cookies.set('tasks', tasks)\n    window.location.reload()\n}\n\nconst choosePrior = prior => {\n    if (prior === 1) return 'priorityCircleGrey'\n    else if (prior === 2) return 'priorityCircleBlue'\n    else return 'priorityCircleRed'\n}\n\nconst createDate = date => {\n    const day = new Date(date).getDate()\n    const month = new Date(date).getMonth()\n    const year = new Date(date).getFullYear()\n    return day + '/' + (month+1) + '/' + year\n}\n\nconst createTaskList = () => {\n    let tasks = cookies.get('tasks') || []\n    if (tasks.length === 0) return <img src={notasks} alt='no-tasks' className='noTasks' />\n\n    else \n    {\n        tasks = tasks.sort(function(a,b) {\n            let t1 = new Date(a.date).getTime()\n            let t2 = new Date(b.date).getTime()\n            return t1-t2\n        })\n\n        tasks = tasks.map(task => \n            <Fragment key={task.title}>\n                <div className={task.done ? 'taskListDone': 'taskListToDo'}>\n                    <span onClick={task.done ? '' : taskDone.bind(this, task.title)} className={choosePrior(task.priority)}></span>\n                    <span onClick={taskDelete.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{createDate(task.date)}</span>\n                </div>\n            </Fragment>\n        )\n        return tasks\n    }\n}\n\nconst TaskList = () => {\n    return (\n        <Fragment>\n            <div className='taskListPanel'>\n                <span className='taskListHeader'>These are your current tasks: </span>\n                <div className='tasksListMobile'>{createTaskList()}</div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}