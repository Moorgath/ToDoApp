{"ast":null,"code":"import _classCallCheck from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import Cookies from'universal-cookie';import'./TaskList.sass';import done from'./img/done.png';import notasks from'./img/logo.png';var TaskList=/*#__PURE__*/function(_Component){_inherits(TaskList,_Component);var _super=_createSuper(TaskList);function TaskList(){var _this;_classCallCheck(this,TaskList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={task:''};_this.cookies=new Cookies();_this.taskDone=function(){var tasks=_this.cookies.get('tasks');tasks.map(function(task){if(task.title===_this.state.task){task.done=true;_this.cookies.set('tasks',tasks);}});window.location.reload();};_this.taskDelete=function(){var tasks=_this.cookies.get('tasks');tasks=tasks.filter(function(task){return task.title!==_this.state.task;});_this.cookies.set('tasks',tasks);window.location.reload();};_this.choosePrior=function(prior){if(prior===1)return'priorityCircleGrey';else if(prior===2)return'priorityCircleBlue';else return'priorityCircleRed';};_this.createDate=function(date){var day=new Date(date).getDate();var month=new Date(date).getMonth();var year=new Date(date).getFullYear();return day+'/'+(month+1)+'/'+year;};_this.handleTask=function(props){document.querySelector('.taskMenu').style.display='block';_this.setState({task:props});};_this.taskClose=function(){document.querySelector('.taskMenu').style.display='none';};_this.createTaskList=function(){var tasks=_this.cookies.get('tasks')||[];if(tasks.length===0)return/*#__PURE__*/React.createElement(\"img\",{src:notasks,alt:\"no-tasks\",className:\"noTasks\"});else{tasks=tasks.sort(function(a,b){var t1=new Date(a.date).getTime();var t2=new Date(b.date).getTime();return t1-t2;});tasks=tasks.map(function(task){return/*#__PURE__*/React.createElement(Fragment,{key:task.title},/*#__PURE__*/React.createElement(\"div\",{className:task.done?'taskListDone':'taskListToDo'},/*#__PURE__*/React.createElement(\"span\",{className:_this.choosePrior(task.priority)}),/*#__PURE__*/React.createElement(\"span\",{onClick:_this.handleTask.bind(_assertThisInitialized(_this),task.title),className:\"taskName\"},task.title,\" \"),/*#__PURE__*/React.createElement(\"span\",{className:\"taskDate\"},_this.createDate(task.date))));});return tasks;}};return _this;}_createClass(TaskList,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"taskListPanel\"},/*#__PURE__*/React.createElement(\"span\",{className:\"taskListHeader\"},\"These are your current tasks: \"),/*#__PURE__*/React.createElement(\"div\",{className:\"tasksListMobile\"},this.createTaskList())),/*#__PURE__*/React.createElement(\"div\",{className:\"taskMenu\"},/*#__PURE__*/React.createElement(\"div\",{className:\"taskOpt\",onClick:this.taskDone},\"Done\"),/*#__PURE__*/React.createElement(\"div\",{className:\"taskOpt\",onClick:this.taskDelete},\"Delete\"),/*#__PURE__*/React.createElement(\"div\",{className:\"taskOpt\",onClick:this.taskClose},\"Cancel \")));}}]);return TaskList;}(Component);export default TaskList;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/TaskList.js"],"names":["React","Component","Fragment","Cookies","done","notasks","TaskList","state","task","cookies","taskDone","tasks","get","map","title","set","window","location","reload","taskDelete","filter","choosePrior","prior","createDate","date","day","Date","getDate","month","getMonth","year","getFullYear","handleTask","props","document","querySelector","style","display","setState","taskClose","createTaskList","length","sort","a","b","t1","getTime","t2","priority","bind"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport Cookies from 'universal-cookie'\nimport './TaskList.sass'\nimport done from './img/done.png'\nimport notasks from './img/logo.png'\n\nclass TaskList extends Component {\n    state = {\n        task: ''\n    }\n\n    cookies = new Cookies()\n\n    taskDone = () => {\n        let tasks = this.cookies.get('tasks')\n        tasks.map(task => {\n            if (task.title === this.state.task) {\n                task.done = true\n                this.cookies.set('tasks', tasks)\n            }\n        })\n        window.location.reload()\n    }\n    \n    taskDelete = () => {\n        let tasks = this.cookies.get('tasks')\n        tasks = tasks.filter(task => \n          task.title !== this.state.task\n        )\n        this.cookies.set('tasks', tasks)\n        window.location.reload()\n    }\n    \n    choosePrior = prior => {\n        if (prior === 1) return 'priorityCircleGrey'\n        else if (prior === 2) return 'priorityCircleBlue'\n        else return 'priorityCircleRed'\n    }\n    \n    createDate = date => {\n        const day = new Date(date).getDate()\n        const month = new Date(date).getMonth()\n        const year = new Date(date).getFullYear()\n        return day + '/' + (month+1) + '/' + year\n    }\n    \n    handleTask = props => {\n        document.querySelector('.taskMenu').style.display = 'block'\n        this.setState({\n            task: props\n        })\n    }\n    \n    taskClose = () => {\n        document.querySelector('.taskMenu').style.display = 'none'\n    }\n\n    createTaskList = () => {\n        let tasks = this.cookies.get('tasks') || []\n        if (tasks.length === 0) return <img src={notasks} alt='no-tasks' className='noTasks' />\n    \n        else \n        {\n            tasks = tasks.sort(function(a,b) {\n                let t1 = new Date(a.date).getTime()\n                let t2 = new Date(b.date).getTime()\n                return t1-t2\n            })\n    \n            tasks = tasks.map(task => \n                <Fragment key={task.title}>\n                    <div className={task.done ? 'taskListDone': 'taskListToDo'}>\n                        <span className={this.choosePrior(task.priority)}></span>\n                        <span onClick={this.handleTask.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{this.createDate(task.date)}</span>\n                    </div>\n                </Fragment>\n            )\n            return tasks\n        }\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className='taskListPanel'>\n                    <span className='taskListHeader'>These are your current tasks: </span>\n                    <div className='tasksListMobile'>{this.createTaskList()}</div>\n                </div>\n                <div className='taskMenu'>\n                    <div className='taskOpt' onClick={this.taskDone}>Done</div>\n                    <div className='taskOpt' onClick={this.taskDelete}>Delete</div>\n                    <div className='taskOpt' onClick={this.taskClose}>Cancel </div>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}