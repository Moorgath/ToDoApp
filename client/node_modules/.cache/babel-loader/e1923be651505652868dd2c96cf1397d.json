{"ast":null,"code":"var _jsxFileName = \"/Users/wojtek/Downloads/todo/client/src/components/TaskList.js\";\nimport React, { Component, Fragment } from 'react';\nimport Cookies from 'universal-cookie';\nimport './TaskList.sass';\nimport notasks from \"./img/cat.svg\";\nimport logo from './img/logo.png';\nconst cookies = new Cookies();\nexport default function TaskList() {\n  const updateDatabase = props => {\n    const tasks = props;\n    const response = fetch('/updatetask', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        tasks: tasks,\n        user: cookies.get('user')\n      })\n    });\n  };\n\n  const taskDone = () => {\n    let tasks = cookies.get('tasks');\n    tasks.map(task => {\n      if (task.title === this.state.task) {\n        if (task.done === true) task.done = false;else task.done = true;\n        cookies.set('tasks', tasks);\n        this.updateDatabase(tasks);\n      }\n    });\n    window.location.reload();\n  };\n\n  taskDelete = () => {\n    let tasks = cookies.get('tasks');\n    tasks = tasks.filter(task => task.title !== this.state.task);\n    cookies.set('tasks', tasks);\n    this.updateDatabase(tasks);\n    window.location.reload();\n  };\n\n  choosePrior = task => {\n    if (task.priority === 1 && task.done === true) return 'priorityCircleGreyDone';else if (task.priority === 1 && task.done === false) return 'priorityCircleGrey';else if (task.priority === 2 && task.done === true) return 'priorityCircleBlueDone';else if (task.priority === 2 && task.done === false) return 'priorityCircleBlue';else if (task.priority === 3 && task.done === true) return 'priorityCircleRedDone';else return 'priorityCircleRed';\n  };\n\n  createDate = date => {\n    const day = new Date(date).getDate();\n    let month = new Date(date).getMonth();\n\n    switch (month) {\n      case 0:\n        month = 'Jan';\n        break;\n\n      case 1:\n        month = 'Feb';\n        break;\n\n      case 2:\n        month = 'Mar';\n        break;\n\n      case 3:\n        month = 'Apr';\n        break;\n\n      case 4:\n        month = 'May';\n        break;\n\n      case 5:\n        month = 'Jun';\n        break;\n\n      case 6:\n        month = 'Jul';\n        break;\n\n      case 7:\n        month = 'Aug';\n        break;\n\n      case 8:\n        month = 'Sep';\n        break;\n\n      case 9:\n        month = 'Oct';\n        break;\n\n      case 10:\n        month = 'Nov';\n        break;\n\n      case 11:\n        month = 'Dec';\n        break;\n    }\n\n    return day + ' ' + month;\n  };\n\n  handleTask = props => {\n    document.querySelector('.taskMenu').style.display = 'block';\n    this.setState({\n      task: props\n    });\n  };\n\n  taskClose = () => {\n    document.querySelector('.taskMenu').style.display = 'none';\n  };\n\n  createTaskList = () => {\n    let tasks = cookies.get('tasks') || [];\n    if (tasks.length === 0) return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: notasks,\n      alt: \"no-tasks\",\n      className: \"noTasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 50\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      class: \"noTasksText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 107\n      }\n    }, \"No tasks added yet\"));else {\n      let tasksToDo = tasks.filter(task => !task.done);\n      tasksToDo = tasksToDo.sort(function (a, b) {\n        let t1 = new Date(a.date).getTime();\n        let t2 = new Date(b.date).getTime();\n        return t1 - t2;\n      });\n      let tasksDone = tasks.filter(task => task.done);\n      tasksDone = tasksDone.sort(function (a, b) {\n        let t1 = new Date(a.date).getTime();\n        let t2 = new Date(b.date).getTime();\n        return t1 - t2;\n      });\n      tasksToDo = tasksToDo.map(task => /*#__PURE__*/React.createElement(Fragment, {\n        key: task.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskListToDo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: this.choosePrior(task),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.handleTask.bind(this, task.title),\n        className: \"taskName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, task.title, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"taskDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 121\n        }\n      }, this.createDate(task.date)))));\n      tasksDone = tasksDone.map(task => /*#__PURE__*/React.createElement(Fragment, {\n        key: task.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"taskListDone\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: this.choosePrior(task),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.handleTask.bind(this, task.title),\n        className: \"taskName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, task.title, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"taskDate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 121\n        }\n      }, this.createDate(task.date)))));\n      tasks = [tasksToDo, tasksDone];\n      return tasks;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskListPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"logo-img\",\n    className: \"logoImg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"taskListHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"These are your current tasks: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasksListMobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, this.createTaskList())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskOpt\",\n    onClick: this.taskDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, \"Done\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskOpt\",\n    onClick: this.taskDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"taskOpt\",\n    onClick: this.taskClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, \"Cancel \")));\n}","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/TaskList.js"],"names":["React","Component","Fragment","Cookies","logo","cookies","TaskList","updateDatabase","props","tasks","response","fetch","method","headers","body","JSON","stringify","user","get","taskDone","map","task","title","state","done","set","window","location","reload","taskDelete","filter","choosePrior","priority","createDate","date","day","Date","getDate","month","getMonth","handleTask","document","querySelector","style","display","setState","taskClose","createTaskList","length","notasks","tasksToDo","sort","a","b","t1","getTime","t2","tasksDone","bind"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport Cookies from 'universal-cookie'\nimport './TaskList.sass'\nimport notasks from './img/cat.svg'\nimport logo from './img/logo.png'\n\nconst cookies = new Cookies()\n\nexport default function TaskList() {\n\n    const updateDatabase = props => {\n        const tasks = props\n        const response = fetch('/updatetask', {\n          method: 'POST',\n          headers: {\n          'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({tasks: tasks, user: cookies.get('user')}),\n        })\n      }\n\n    const taskDone = () => {\n        let tasks = cookies.get('tasks')\n        tasks.map(task => {\n            if (task.title === this.state.task) {\n                if (task.done === true) task.done = false\n                else task.done = true\n                cookies.set('tasks', tasks)\n                this.updateDatabase(tasks)\n            }\n        })\n        window.location.reload()\n    }\n    \n    taskDelete = () => {\n        let tasks = cookies.get('tasks')\n        tasks = tasks.filter(task => \n          task.title !== this.state.task\n        )\n        cookies.set('tasks', tasks)\n        this.updateDatabase(tasks)\n        window.location.reload()\n    }\n    \n    choosePrior = task => {\n        if ((task.priority === 1) && (task.done === true)) return 'priorityCircleGreyDone'\n        else if ((task.priority === 1) && (task.done === false)) return 'priorityCircleGrey'\n        else if ((task.priority === 2) && (task.done === true)) return 'priorityCircleBlueDone'\n        else if ((task.priority === 2) && (task.done === false)) return 'priorityCircleBlue'\n        else if ((task.priority === 3) && (task.done === true)) return 'priorityCircleRedDone'\n        else return 'priorityCircleRed'\n    }\n    \n    createDate = date => {\n        const day = new Date(date).getDate()\n        let month = new Date(date).getMonth()\n\n        switch (month) {\n            case 0:\n                month = 'Jan'\n                break;\n            case 1:\n                month = 'Feb'\n                break;\n            case 2:\n                month = 'Mar'\n                break;\n            case 3:\n                month = 'Apr'\n                break;\n            case 4:\n                month = 'May'\n                break;\n            case 5:\n                month = 'Jun'\n                break;\n            case 6:\n                month = 'Jul'\n                break;\n            case 7:\n                month = 'Aug'\n                break;\n            case 8:\n                month = 'Sep'\n                break;\n            case 9:\n                month = 'Oct'\n                break;\n            case 10:\n                month = 'Nov'\n                break;\n            case 11:\n                month = 'Dec'\n                break;\n        }\n\n        return day + ' ' + month\n    }\n    \n    handleTask = props => {\n        document.querySelector('.taskMenu').style.display = 'block'\n        this.setState({\n            task: props\n        })\n    }\n    \n    taskClose = () => {\n        document.querySelector('.taskMenu').style.display = 'none'\n    }\n\n    createTaskList = () => {\n        let tasks = cookies.get('tasks') || []\n        if (tasks.length === 0) return <Fragment><img src={notasks} alt='no-tasks' className='noTasks' /> <span class='noTasksText'>No tasks added yet</span></Fragment>\n    \n        else \n        {\n            let tasksToDo = tasks.filter(task => !task.done)\n            tasksToDo = tasksToDo.sort(function(a,b) {\n                let t1 = new Date(a.date).getTime()\n                let t2 = new Date(b.date).getTime()\n                return t1-t2\n            })\n\n            let tasksDone = tasks.filter(task => task.done)\n            tasksDone = tasksDone.sort(function(a,b) {\n                let t1 = new Date(a.date).getTime()\n                let t2 = new Date(b.date).getTime()\n                return t1-t2\n            })\n    \n            tasksToDo = tasksToDo.map(task => \n                <Fragment key={task.title}>\n                    <div className='taskListToDo'>\n                        <span className={this.choosePrior(task)}></span>\n                        <span onClick={this.handleTask.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{this.createDate(task.date)}</span>\n                    </div>\n                </Fragment>\n            )\n\n            tasksDone = tasksDone.map(task => \n                <Fragment key={task.title}>\n                    <div className='taskListDone'>\n                        <span className={this.choosePrior(task)}></span>\n                        <span onClick={this.handleTask.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{this.createDate(task.date)}</span>\n                    </div>\n                </Fragment>\n            )\n\n            tasks = [tasksToDo, tasksDone]\n\n            return tasks\n        }\n    }\n\n        return (\n            <Fragment>\n                <div className='taskListPanel'>\n                    <img src={logo} alt='logo-img' className='logoImg' />\n                    <span className='taskListHeader'>These are your current tasks: </span>\n                    <div className='tasksListMobile'>{this.createTaskList()}</div>\n                </div>\n                <div className='taskMenu'>\n                    <div className='taskOpt' onClick={this.taskDone}>Done</div>\n                    <div className='taskOpt' onClick={this.taskDelete}>Delete</div>\n                    <div className='taskOpt' onClick={this.taskClose}>Cancel </div>\n                </div>\n            </Fragment>\n        )\n    }\n"]},"metadata":{},"sourceType":"module"}